---
- name: Prep Ubuntu
  hosts: nodes
  become: yes
  gather_facts: True
  vars_files:
    - ../answerfile.yml
    - ../defaults.yml    
  tasks:    
    - name: Add IP address of all hosts to all hosts
      lineinfile:
        dest: /etc/hosts
        line: "{{ hostvars[item].ansible_host }} {{ hostvars[item].inventory_hostname }} {{ hostvars[item].inventory_hostname_short }}"
        state: present
      with_items: "{{ groups.nodes }}"
      
    - name: Generate SSH keys
      shell: ssh-keygen -b 2048 -t rsa -f ~/.ssh/id_rsa -q -N ""
      ignore_errors: yes
    
    - name: Set timezone to Asia/Tokyo
      shell: timedatectl set-timezone "{{ timezone }}"

    - block:
      - name: Disable swap
        shell: swapoff -a
  
      - name: Change fstab not to enable swap
        shell: sed -i '/ swap / s/^/#/' /etc/fstab
    
      - name: install required packages
        apt: name={{ item }} update_cache=yes
        with_items: "{{ ubuntu.required_package }}"
  
      - name: Set ntp server
        shell: sed -i 's/#NTP=/NTP="{{ ntp }}"/g' /etc/systemd/timesyncd.conf
    
      - name: Restart timesyncd 
        service: name=systemd-timesyncd state=restarted enabled=yes
  
      - name: add google repo key
        shell: 'curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -'
  
      - name: Add kubernete repo
        lineinfile:
          state: present
          create: yes
          path: /etc/apt/sources.list.d/kubernetes.list
          line: 'deb http://apt.kubernetes.io/ kubernetes-xenial main'
  
      - name: install kubeadm
        apt: name={{ item }} update_cache=yes
        with_items:
          - kubelet=1.9.3-00
          - kubeadm=1.9.3-00
          - kubectl=1.9.3-00
      when: ansible_distribution == 'Ubuntu'

    - block:      
      - name: upgrade all packages
        yum:
          name: '*'
          state: latest
          exclude: docker*
  
      - name: Install NTP
        yum: name=ntp state=installed
  
      - name: Copy over the NTP configuration
        template: src=../templates/ntp.conf dest=/etc/ntp.conf
      
      - name: Make sure NTP is stopped
        systemd: name=ntpd state=stopped
      
      - name: Sync time initialy
        shell: ntpdate "{{ ntp }}"
  
      - name: Make sure NTP is started up
        systemd:
          name: ntpd
          state: started
          enabled: True
  
      - name: Install required packages
        yum: name="{{item}}" state=latest
        with_items: "{{ required_package }}"
          
      - name: Install docker repo
        shell: yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
  
      - name: Install docker-ce-17.12.0.ce packages
        yum: name=docker-ce-17.12.0.ce state=latest
          
      - name: Make sure docker is running
        systemd:
          name: docker
          state: started
          enabled: True
          
      - name: Copy over kubernetes repo file 
        copy:
          src: ../files/kubernetes.repo
          dest: /etc/yum.repos.d/kubernetes.repo
          force: true
          
      - name: install kubelet kubeadm kubectl
        shell: yum -y install kubelet kubeadm kubectl
  
      - name: Make sure kubelet is running
        systemd:
          name: kubelet
          state: started
          enabled: True
  
      - name: Copy over k8s sysctl file
        copy:
          src: ../files/k8s.conf
          dest: /etc/sysctl.d/k8s.conf
          force: true
          
      - name: Update sysctl 
        shell: sysctl --system
  
      - name: Change fstab not to enable swap
        shell: sed -i "s/\/dev\/mapper\/cl-swap/\#\/dev\/mapper\/cl-swap/g" /etc/fstab
  
      - name: Turn off swap
        shell: swapoff -a
        
      - name: Open required port on firewalld
        firewalld:
          zone: public
          port: "{{ item }}"
          permanent: true
          state: enabled
          immediate: true
        with_items:
          - 6443/tcp 
          - 2379/tcp 
          - 2380/tcp 
          - 10250/tcp
          - 10251/tcp
          - 10252/tcp
          - 10255/tcp
      when: ansible_distribution == 'Red Hat Enterprise Linux'        
